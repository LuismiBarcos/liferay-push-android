apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

apply from: 'https://raw.githubusercontent.com/brunofarache/liferay-mobile-sdk/master/release-aar.gradle'
apply from: 'https://raw.githubusercontent.com/brunofarache/liferay-mobile-sdk/master/formatter.gradle'
format.workingDir = 'src'

dependencies {
	compile group: 'com.google.android.gms', name: 'play-services-gcm', version: '7.0.0'
	compile('com.liferay.mobile:liferay-android-sdk:2.0.2') {
		exclude group: 'com.google.android'
	}
	compile group: 'com.squareup', name: 'otto', version: '1.3.8'

	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.apache.maven', name: 'maven-ant-tasks', version: '2.1.3'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.4.3'
	testCompile group: 'org.robolectric', name: 'robolectric', version: '3.1.4'
}

buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:3.0.0-beta2'
		classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
	}
}

android {
	compileSdkVersion 25
	buildToolsVersion "25.0.2"

	defaultConfig {
		minSdkVersion 15
		targetSdkVersion 25
	}

	lintOptions {
		disable 'InvalidPackage'
	}

	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
	}

	sourceSets {
		main {
			java.srcDirs += 'src/gen/java'
		}

		test {
			java.srcDirs += 'build/generated/source/r/debug'
		}
	}
}

def srcDirs = files(android.sourceSets.main.java.srcDirs)

task coverage(type: JacocoReport, dependsOn: "testDebug") {
	description = "Coverage Report"

	classDirectories = fileTree(dir: "$buildDir/intermediates/classes/debug",
		excludes: ['**/R.class',
		           '**/R$*.class',
		           '**/BuildConfig.*',
		           '**/Manifest*.*',
		           '**/BitmapRequestBuilder.class',
		           '**/DrawableRequestBuilder.class',
		           '**/GifRequestBuilder.class'])

	sourceDirectories = srcDirs
	executionData = files("$buildDir/jacoco/testDebug.exec")

	reports {
		html.enabled = true
		xml.enabled = true
	}
}

coveralls {
	jacocoReportPath = "$buildDir/reports/jacoco/coverage/coverage.xml"
	sourceDirs = srcDirs.files.absolutePath
}
