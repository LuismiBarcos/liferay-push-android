apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'signing'

if (file('../../formatter.gradle').exists()) {
	apply from: '../../formatter.gradle'
	format.workingDir = 'src'
}

dependencies {
	compile group: 'com.google.android.gms', name: 'play-services-base', version: '6.5.87'
	compile group: 'com.liferay.mobile', name: 'liferay-android-sdk', version: '6.2.0.15'
	compile group: 'com.squareup', name: 'otto', version: '1.3.6'

	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.apache.maven', name: 'maven-ant-tasks', version: '2.1.3'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
	testCompile group: 'org.robolectric', name: 'robolectric', version: '2.4'
}

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:1.1.2'
		classpath 'com.github.dcendents:android-maven-plugin:1.2'
	}
}

android {
	compileSdkVersion 21
	buildToolsVersion "21.1.2"

	defaultConfig {
		minSdkVersion 15
		targetSdkVersion 21
	}

	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
	}

	sourceSets {
		main {
			java.srcDirs += 'src/gen/java'
		}
	}
}

task javadoc(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
}

task jarJavadoc(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task jarSources(type: Jar) {
	classifier = 'sources'
	from android.sourceSets.main.java.srcDirs
}

artifacts {
	archives jarJavadoc
	archives jarSources
}

signing {
    sign configurations.archives
}

install {
	repositories.mavenInstaller {
		pom.project {
			name project.description
			description project.description
			url 'https://www.liferay.com/community/liferay-projects/liferay-mobile-sdk/overview'
			licenses {
				license {
					name 'LGPL 2.1'
					url 'http://opensource.org/licenses/lgpl-2.1.php'
					distribution 'repo'
				}
			}
			scm {
				url 'https://github.com/brunofarache/liferay-push'
				connection 'scm:git:git://github.com/brunofarache/liferay-push.git'
			}
			developers {
				developer {
					id 'brunofarache'
					name 'Bruno Farache'
					email 'bruno.farache@liferay.com'
				}
			}
		}
	}
}

task release(type: Copy, dependsOn: install) {
	from "$buildDir/outputs/aar"
	from "$buildDir/libs"
	from "$buildDir/poms"
	into "$buildDir/release"
	exclude "${project.name}-debug.aar"

	rename { String name ->
		name.replace("${project.name}-release", "${project.name}-${version}")
	}

	rename { String name ->
		name.replace('pom-default.xml', "${project.name}-${version}.pom")
	}

	doLast {
		signing.sign file("build/release/${project.name}-${version}.pom")
	}
}